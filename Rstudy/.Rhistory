pal = mypalette ,
title = '인구수',
opacity = 1)
map8		 #한 지역에 관한 가구수를 뽑아 내기 위해서
saveWidget(map7, file="oneMap.html")
k2 <- korpopmap2
k3 <- korpopmap3
k2@data[c("C행정구역별_읍면동", "행정구역별_읍면동")] #변수명만 줘도 works
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 서대문구의 구코드 출력
k2@data[k2@data$C행정구역별_읍면동 == '11130',
c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 서대문구에 속한 동의 코드 출력 --> 추출됨
seodong<-k3@data[grep('^11130', k3@data$C행정구역별_읍면동),  #SO, grep을 활용해서 !!!!! 올려버려!!
c("C행정구역별_읍면동", "행정구역별_읍면동")]
View(seodong)
# 서대문구의 동 뽑기
seoname <- '서대문구'
seogucode <- k2@data[k2@data$name == seoname, "code.data"]
pattern <- paste0('^', seogucode)
k3@data<-k3@data[grep(pattern, k3@data$code.data),]
k3@polygons<-k3@polygons[grep(pattern, k3@data$code.data)]
View(k3@data)
# 서대문구구 데이터만 뽑음
#k3@data<-k3@data[c(193:207),]
k3@data$name<-gsub('·','',k3@data$name)  #동에있는 -데이터 없애기
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='서대문구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
#mypalette <- colorNumeric(palette ='RdYlBu' , domain = k3@data$'일인가구')
#mypalette <- colorNumeric(palette ='PuRd' , domain = k3@data$'일인가구')
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map9 <- NULL
map9<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = 0.7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map9		 #한 지역에 관한 가구수를 뽑아 내기 위해서
saveWidget(map9, file="oneMap.html")
k3@data$name<-gsub('·','',k3@data$name)  #동에있는 -데이터 없애기
k2 <- korpopmap2
k3 <- korpopmap3
k2@data[c("C행정구역별_읍면동", "행정구역별_읍면동")] #변수명만 줘도 works
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 서대문구의 구코드 출력
# 서대문구의 동 뽑기
seoname <- '서대문구'
seogucode <- k2@data[k2@data$name == seoname, "code.data"]
pattern <- paste0('^', seogucode)
k3@data<-k3@data[grep(pattern, k3@data$code.data),]
k3@polygons<-k3@polygons[grep(pattern, k3@data$code.data)]
# 서대문구구 데이터만 뽑음
#k3@data<-k3@data[c(193:207),]
k3@data$name<-gsub('·','',k3@data$name)  #동에있는 -데이터 없애기
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='서대문구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
#mypalette <- colorNumeric(palette ='RdYlBu' , domain = k3@data$'일인가구')
#mypalette <- colorNumeric(palette ='PuRd' , domain = k3@data$'일인가구')
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map9 <- NULL
map9<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = 0.7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map9		 #한 지역에 관한 가구수를 뽑아 내기 위해서
saveWidget(map9, file="oneMap.html")
k2 <- korpopmap2
k3 <- korpopmap3
k2@data[c("C행정구역별_읍면동", "행정구역별_읍면동")] #변수명만 줘도 works
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 서대문구의 구코드 출력
# 서대문구의 동 뽑기
guname <- '서대문구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
pattern <- paste0('^', gucode)
k3@data<-k3@data[grep(pattern, k3@data$code.data),]
k3@polygons<-k3@polygons[grep(pattern, k3@data$code.data)]
# 서대문구구 데이터만 뽑음
#k3@data<-k3@data[c(193:207),]
k3@data$name<-gsub('·','',k3@data$name)  #동에있는 -데이터 없애기
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='서대문구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
#mypalette <- colorNumeric(palette ='RdYlBu' , domain = k3@data$'일인가구')
#mypalette <- colorNumeric(palette ='PuRd' , domain = k3@data$'일인가구')
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map9 <- NULL
map9<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = 0.7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map9		 #한 지역에 관한 가구수를 뽑아 내기 위해서
saveWidget(map9, file="oneMap.html")
View(DONG)
k3@data$name<-gsub('·','',k3@data$name)  #동에있는 -데이터 없애기
k3@data$name
View(DONG)
k3 <- korpopmap3
k3
View(k3)
View(k3@data)
View(DONG)
colnames(DONG)<-c('구','name','일인가구')
info<-k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
View(info)
info<-k2@data[c("C행정구역별_읍면동", "행정구역별_읍면동")] #변수명만 줘도 works
View(info)
k2@data
View(k2@data)
View(DONG)
View(k3@data)
k3@data <- k3@data[grep(pattern, k3@data$code.data),]
setwd('c:/HaleyDeveloper/Rstudy')
library(Kormaps)
library(leaflet)
library(dplyr)
library(htmlwidgets)
Encoding(names(Korpopmap3))<-'UTF-8'
Encoding(Korpopmap3@data$name)<-'UTF-8'
k3<-Korpopmap3
DONG<- read.csv('c:/HaleyDeveloper/Rstudy/data/one.csv')
guname<-'서대문구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
pattern <- paste0('^', gucode)
k3@polygons <- k3@polygons[grep(pattern, k3@data$code.data)]
k3@data <- k3@data[grep(pattern, k3@data$code.data),]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구','name','일인가구')
dong <- DONG %>%filter(구==guname)
guname<-iconv(name, from='CP949', to='UTF-8')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>% addTiles() %>% setView(lat=37.52711, lng=126.987517, zoom=12) %>%addPolygons(stroke =FALSE,fillOpacity = 0.7,popup = mypopup,color = ~mypalette(k3@data$일인가구)) %>% addLegend( values = ~k3@data$일인가구,pal = mypalette ,title = '인구수',opacity = 1)
map7
setwd('c:/HaleyDeveloper/Rstudy')
library(Kormaps)
library(leaflet)
library(dplyr)
library(htmlwidgets)
Encoding(names(Korpopmap3))<-'UTF-8'
Encoding(Korpopmap3@data$name)<-'UTF-8'
k3<-Korpopmap3
DONG<- read.csv('c:/HaleyDeveloper/Rstudy/data/one.csv')
guname<-'성북구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
pattern <- paste0('^', gucode)
k3@polygons <- k3@polygons[grep(pattern, k3@data$code.data)]
k3@data <- k3@data[grep(pattern, k3@data$code.data),]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구','name','일인가구')
dong <- DONG %>%filter(구==guname)
guname<-iconv(name, from='CP949', to='UTF-8')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>% addTiles() %>% setView(lat=37.52711, lng=126.987517, zoom=12) %>%addPolygons(stroke =FALSE,fillOpacity = 0.7,popup = mypopup,color = ~mypalette(k3@data$일인가구)) %>% addLegend( values = ~k3@data$일인가구,pal = mypalette ,title = '인구수',opacity = 1)
map7
setwd('c:/HaleyDeveloper/Rstudy')
library(Kormaps)
library(leaflet)
library(dplyr)
library(htmlwidgets)
Encoding(names(Korpopmap3))<-'UTF-8'
Encoding(Korpopmap3@data$name)<-'UTF-8'
k3<-Korpopmap3
DONG<- read.csv('c:/HaleyDeveloper/Rstudy/data/one.csv')
guname<-'성북구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
pattern <- paste0('^', gucode)
k3@polygons <- k3@polygons[grep(pattern, k3@data$code.data)]
k3@data <- k3@data[grep(pattern, k3@data$code.data),]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구','name','일인가구')
dong <- DONG %>%filter(구==guname)
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>% addTiles() %>% setView(lat=37.52711, lng=126.987517, zoom=12) %>%addPolygons(stroke =FALSE,fillOpacity = 0.7,popup = mypopup,color = ~mypalette(k3@data$일인가구)) %>% addLegend( values = ~k3@data$일인가구,pal = mypalette ,title = '인구수',opacity = 1)
map7
setwd('c:/HaleyDeveloper/Rstudy')
library(Kormaps)
library(leaflet)
library(dplyr)
library(htmlwidgets)
Encoding(names(Korpopmap3))<-'UTF-8'
Encoding(Korpopmap3@data$name)<-'UTF-8'
k3<-Korpopmap3
DONG<- read.csv('c:/HaleyDeveloper/Rstudy/data/one.csv')
guname<-'성북구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
pattern <- paste0('^', gucode)
k3@polygons <- k3@polygons[grep(pattern, k3@data$code.data)]
k3@data <- k3@data[grep(pattern, k3@data$code.data),]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구','name','일인가구')
dong <- DONG %>%filter('구'==guname)
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>% addTiles() %>% setView(lat=37.52711, lng=126.987517, zoom=12) %>%addPolygons(stroke =FALSE,fillOpacity = 0.7,popup = mypopup,color = ~mypalette(k3@data$일인가구)) %>% addLegend( values = ~k3@data$일인가구,pal = mypalette ,title = '인구수',opacity = 1)
map7
k2 <- korpopmap2
k3 <- korpopmap3
k2@data[c("C행정구역별_읍면동", "행정구역별_읍면동")] #변수명만 줘도 works
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 서대문구의 구코드 출력
k2@data[k2@data$C행정구역별_읍면동 == '11130',
c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 서대문구에 속한 동의 코드 출력 --> 추출됨
seodong<-k3@data[grep('^11130', k3@data$C행정구역별_읍면동),  #SO, grep을 활용해서 !!!!! 올려버려!!
c("C행정구역별_읍면동", "행정구역별_읍면동")]
View(seodong)
# 서대문구의 동 뽑기
seoname <- '서대문구'
seogucode <- k2@data[k2@data$name == seoname, "code.data"]
pattern <- paste0('^', seogucode)
k3@data[grep(pattern, k3@data$code.data),
c("code.data", "name")]
View(k3@data)
# 서대문구구 데이터만 뽑음
k3@data<-k3@data[c(194:207),]
k3@polygons<-k3@polygons[c(194:207)]
View(k3@data)
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='서대문구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
#mypalette <- colorNumeric(palette ='RdYlBu' , domain = k3@data$'일인가구')
#mypalette <- colorNumeric(palette ='PuRd' , domain = k3@data$'일인가구')
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map9 <- NULL
map9<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = 0.7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map9		 #한 지역에 관한 가구수를 뽑아 내기 위해서
saveWidget(map7, file="oneMap.html")
install.packages("rvest")
library(rvest)
url<-("http://media.daum.net/ranking/popular/")
text <- read_html(url)
text
nodes<- html_nodes(text, "#mArticle > div.rank_news > ul > li > div > strong > a")
title<- html_text(nodes, trim=TRUE);title
nodess<- html_nodes(text, "#mArticle > div.rank_news > ul > li > div > strong > span")
company<- html_text(nodess, trim=TRUE); company
page <- cbind(company, title)
write.csv(page, "daumnews.csv")
library(wordcloud)
library(dplyr)
getwd()
oliver<-read.csv('oliver3.csv')
View(oliver)
oliver<-as.vector(oliver)
png("oliver.png", 600, 400)
oliver %>%
Filter(function(x){nchar(x)>=2},.)%>%
table %>%
sort (decreasing=T)%>%
data.frame ->oliver2
windwosFonts(kotic=windowsFont("고딕"))
wordcloud2(oliver, fontFamily = "맑은고딕")
wordcloud2(oliver,size=0.5,col="random-dark")
result<-wordcloud2(data = oliver, shape = 'star')
library("htmlwidgets")
saveWidget(oliver,"wc.html",title="WORDCLOUD2 실습", selfcontained = F)
head(yes2)
str(yes2)
install.packages('base64enc')
library(base64enc)
wordcloud2(oliver,size=0.5,col="random-dark", figPath="twitter.png")
dev.off()
getwd()
oliver<-read.csv('oliver3.csv')
View(oliver)
oliver<-as.vector(oliver)
png("oliver.png", 600, 400)
oliver %>%
Filter(function(x){nchar(x)>=2},.)%>%
table %>%
sort (decreasing=T)%>%
data.frame ->oliver2
oliver %>%
Filter(function(x){nchar(x)>=2},.)%>%
table %>%
sort (decreasing=T)%>%
data.frame ->oliver2
windwosFonts(kotic=windowsFont("고딕"))
wordcloud2(oliver, fontFamily = "맑은고딕")
library(wordcloud2)
oliver<-read.csv('oliver3.csv')
oliver<-as.vector(oliver)
png("oliver.png", 600, 400)
oliver %>%
Filter(function(x){nchar(x)>=2},.)%>%
table %>%
sort (decreasing=T)%>%
data.frame ->oliver2
windwosFonts(kotic=windowsFont("고딕"))
library(wordcloud2)
filename <-"portfolio"
words <- read.table(paste0("c:/HaleyDeveloper/Rstudy/data/",filename,".txt"),stringsAsFactors = F)
my_cloud <- wordcloud2(words,size=0.5,col="random-dark")
library(htmltools)
my_path <- renderTags(my_cloud)
words <- read.table(paste0("c:/HaleyDeveloper/Rstudy/",filename,".txt"),stringsAsFactors = F)
my_cloud <- wordcloud2(words,size=0.5,col="random-dark")
words
my_cloud <- wordcloud2(words,size=0.5,col="random-dark")
words<- as.datafram(words)
words<- as.dataframe(words)
words<- as.data.frame(words)
my_cloud <- wordcloud2(words,size=0.5,col="random-dark")
words
getwd()
word_data <- readLines("portfolio.txt")
word_data
my_cloud <- wordcloud2(words,size=0.5,col="random-dark")
word_data2 <- sapply(word_data, extractNoun, USE.NAMES = F)
library(dplyr)
words%>%
count(,)->words
words
words
%>%
count(,)->words
words%>%
count(v1)->words
words
words <- read.csv(paste0("c:/HaleyDeveloper/Rstudy/data/",filename,".csv"),stringsAsFactors = F)
words <- read.csv(paste0("c:/HaleyDeveloper/Rstudy/data/",filename,".csv"),stringsAsFactors = F)
filename <-"portfolio"
words <- read.table(paste0("c:/HaleyDeveloper/Rstudy/",filename,".txt"),stringsAsFactors = F)
words1 <- read.table(paste0("c:/HaleyDeveloper/Rstudy/",filename,".txt"),stringsAsFactors = F)
words2 <- readLines("portfolio.txt")
words2
words1 <- read.table(paste0("c:/HaleyDeveloper/Rstudy/",filename,".txt"),stringsAsFactors = F)
words1
words1%>%
count(v1)->words
typeof(words1)
as.data.frame(words1)->words
words1%>%
count(v1)->words
as.data.frame(words1)->words
words
words1%>%
count(V1)->words
words
my_cloud <- wordcloud2(words,size=0.5,col="random-dark")
library(htmltools)
my_path <- renderTags(my_cloud)
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-dark")
my_cloud <- wordcloud2(words,size=0.5,col="rainbow")
wordcloud2(words,size=0.5,col="rainbow")
library(devtools)
devtools::install_github("lchiffon/wordcloud2")
letterCloud(data=wordcount,word='R',wordSize=1,fontFamily='나눔바른고딕')
letterCloud(data=words1,word='Y',wordSize=1,fontFamily='나눔바른고딕')
letterCloud(data=words,word='Y',wordSize=1,fontFamily='나눔바른고딕')
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-dark")
letterCloud(data=words,word='Y',wordSize=1)
letterCloud(data=words,word='Y',wordSize=3)
letterCloud(data=words,word='Y',wordSize=3)
letterCloud(data=words,word='Y',wordSize=3)
my_cloud <- wordcloud2(words,size=0.5,col="Set3")
wordcloud2(words,size=0.5,col="Set3")
wordcloud2(words,size=0.5,col="Set3")
my_cloud <- wordcloud2(words,size=0.5,col="Set3")
my_cloud
my_cloud <- wordcloud2(words,size=0.5)
dark
my_cloud <- wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-pink")
wordcloud2(words,size=0.5,col="pink")
words <- read.table(paste0("c:/HaleyDeveloper/Rstudy/",filename,".txt"),stringsAsFactors = F)
words<- as.data.frame(words)
words1 <- read.table(paste0("c:/HaleyDeveloper/Rstudy/",filename,".txt"),stringsAsFactors = F)
words1%>%
count(V1)->words
words
my_cloud <- wordcloud2(words,size=0.5,col="pink")
my_cloud
letterCloud(data=words,word='Y',wordSize=1)
letterCloud(data=words,word='O',wordSize=1)
figPath = system.file("heart.png",package = "wordcloud2")
wordcloud2(words, figPath = figPath, size = 1.5,color = "skyblue")
figPath <- system.file("heart.png",package = "wordcloud2")
wordcloud2(words, figPath = figPath, size = 1.5,color = "skyblue")
letterCloud(words, word = "R", size = 2)
letterCloud(words,"R")
letter<-letterCloud(words,"R")
figPath = system.file("heart.png",package = "wordcloud2")
wordcloud2(words, figPath = figPath, size = 1.5,color = "skyblue")
figPath
figPath <-system.file("heart.png",package = "wordcloud2")
figPath
library(wordcloud2)
figPath <-system.file("heart.png",package = "wordcloud2")
wordcloud2(words, figPath = "heart.png", size = 1.5,color = "skyblue")
figPath =system.file("heart.png",package = "wordcloud2")
wordcloud2(words, figPath = "heart.png", size = 1.5,color = "skyblue")
library(htmltools)
my_path <- renderTags(my_cloud)
my_path
devtools::install_github("lchiffon/wordcloud2")
letter<-letterCloud(words,"R")
words1 <- read.table(paste0("c:/HaleyDeveloper/Rstudy/",filename,".txt"),stringsAsFactors = F)
words1%>%
count(V1)->words
my_cloud <- wordcloud2(words,size=0.5,col="pink")
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
words1 <- read.table(paste0("c:/HaleyDeveloper/Rstudy/",filename,".txt"),stringsAsFactors = F)
words1%>%
count(V1)->words
my_cloud <- wordcloud2(words,size=0.5,col="pink")
my_cloud
my_cloud
my_cloud
my_cloud <- wordcloud2(words,size=0.5,col="pink", shape="heart")
my_cloud
wordcloud2(words, figPath="heart.png", size=0.5, backgroundColor="black")
wordcloud2(words, figPath="heart.png", size=5)
my_cloud <- wordcloud2(words,size=0.5,col="pink", shape="heart")
my_cloud
wordcloud2(words, figPath="실루엣.png", size=5)
words1 <- read.table(paste0("c:/HaleyDeveloper/Rstudy/",filename,".txt"),stringsAsFactors = F)
words1%>%
count(V1)->words
my_cloud <- wordcloud2(words,size=0.5,col="pink", shape="heart")
my_cloud <- wordcloud2(words,figPath="실루엣.png" size=0.5,col="pink", shape="heart")
my_cloud <- wordcloud2(words,figPath="실루엣.png", size=0.5,col="pink", shape="heart")
my_cloud
my_cloud <- wordcloud2(words,figPath="실루엣.png", size=0.5,col="pink")
my_cloud <- wordcloud2(words,figPath="실루엣.png", size=0.5,col="random-light")
my_cloud <- wordcloud2(words, size=0.5,col="random-light")
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
my_cloud
